<?xml version="1.0"?>
<robot name="vehicle_auto_sim" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- xacro:arg -->
    <xacro:arg name="laser_visual"  default="false"/>
    <xacro:arg name="camera_visual" default="false"/>
    <xacro:arg name="imu_visual"    default="false"/>

    <!--  plugin for ROS Control -->
	<!--
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		  <robotNamespace>/</robotNamespace>
		</plugin>
	</gazebo>
	-->

    <!-- plugin for front right wheel -->
    <!--
    <gazebo reference="front_right_wheel">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>500000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <material>Gazebo/FlatBlack</material>
    </gazebo>
    -->

    <!-- plugin for front left wheel -->
    <!--
    <gazebo reference="front_left_wheel">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>500000.0</kp>
        <kd>10.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <material>Gazebo/FlatBlack</material>
    </gazebo>
    -->

  	<!-- plugin for hokuyo -->
  	<gazebo reference="hokuyo_laser">
		<!-- <sensor type="gpu_ray" name="head_hokuyo_sensor"> -->
        <material>Gazebo/FlatBlack</material>
    	<sensor type="ray" name="head_hokuyo_sensor">
      		<pose>0 0 0 0 0 0</pose>
      		<visualize>$(arg laser_visual)</visualize>
      		<update_rate>40</update_rate>
      		<ray>
        		<scan>
          			<horizontal>
            			<samples>720</samples>
            			<resolution>1</resolution>
            			<!-- <min_angle>-1.570796</min_angle> -->
                        <min_angle>0.0</min_angle>
            			<!-- <max_angle>1.570796</max_angle> -->
                        <max_angle>6.28319</max_angle>
          			</horizontal>
        		</scan>
        		<range>
          			<min>0.10</min>
          			<max>30.0</max>
          			<resolution>0.01</resolution>
        		</range>
        		<noise>
          			<type>gaussian</type>
          			<!-- Noise parameters based on published spec for Hokuyo laser
               			achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               			stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               			reading. -->
         			<mean>0.0</mean>
          			<stddev>0.01</stddev>
        		</noise>
      		</ray>
			<!-- <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so"> -->
      		<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        		<topicName>/vehicle_auto/laser/scan</topicName>
        		<frameName>hokuyo_laser</frameName>
      		</plugin>
    	</sensor>
  	</gazebo>

	<!-- plugin for camera1 -->
	<gazebo reference="front_camera">
		<sensor type="camera" name="camera1">
			<update_rate>30.0</update_rate>
		  	<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
			  		<width>800</width>
			  		<height>800</height>
			  		<format>R8G8B8</format>
				</image>
				<clip>
			  		<near>0.02</near>
			  		<far>300</far>
				</clip>
				<noise>
			  		<type>gaussian</type>
			  		<!-- Noise is sampled independently per pixel on each frame.
				   		That pixel's noise value is added to each of its color
				   		channels, which at that point lie in the range [0,1]. -->
			  		<mean>0.0</mean>
			  		<stddev>0.007</stddev>
				</noise>
		  	</camera>
		  	<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>vehicle_auto/camera1</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>front_camera</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
		  	</plugin>
		</sensor>
	</gazebo>

	<!-- plugin for camera2 -->
	<gazebo reference="back_camera">
		<sensor type="camera" name="camera2">
			<update_rate>30.0</update_rate>
		  	<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
			  		<width>800</width>
			  		<height>800</height>
			  		<format>R8G8B8</format>
				</image>
				<clip>
			  		<near>0.02</near>
			  		<far>300</far>
				</clip>
				<noise>
			  		<type>gaussian</type>
			  		<!-- Noise is sampled independently per pixel on each frame.
				   		That pixel's noise value is added to each of its color
				   		channels, which at that point lie in the range [0,1]. -->
			  		<mean>0.0</mean>
			  		<stddev>0.007</stddev>
				</noise>
		  	</camera>
		  	<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>vehicle_auto/camera2</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>back_camera</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
		  	</plugin>
		</sensor>
	</gazebo>

	<!-- plugin for camera3 -->
	<gazebo reference="right_camera">
		<sensor type="camera" name="camera3">
			<update_rate>30.0</update_rate>
		  	<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
			  		<width>800</width>
			  		<height>800</height>
			  		<format>R8G8B8</format>
				</image>
				<clip>
			  		<near>0.02</near>
			  		<far>300</far>
				</clip>
				<noise>
			  		<type>gaussian</type>
			  		<!-- Noise is sampled independently per pixel on each frame.
				   		That pixel's noise value is added to each of its color
				   		channels, which at that point lie in the range [0,1]. -->
			  		<mean>0.0</mean>
			  		<stddev>0.007</stddev>
				</noise>
		  	</camera>
		  	<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>vehicle_auto/camera3</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>right_camera</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
		  	</plugin>
		</sensor>
	</gazebo>

	<!-- plugin for camera4 -->
	<gazebo reference="left_camera">
		<sensor type="camera" name="camera4">
			<update_rate>30.0</update_rate>
		  	<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
			  		<width>800</width>
			  		<height>800</height>
			  		<format>R8G8B8</format>
				</image>
				<clip>
			  		<near>0.02</near>
			  		<far>300</far>
				</clip>
				<noise>
			  		<type>gaussian</type>
			  		<!-- Noise is sampled independently per pixel on each frame.
				   		That pixel's noise value is added to each of its color
				   		channels, which at that point lie in the range [0,1]. -->
			  		<mean>0.0</mean>
			  		<stddev>0.007</stddev>
				</noise>
		  	</camera>
		  	<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>vehicle_auto/camera4</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>left_camera</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
		  	</plugin>
		</sensor>
	</gazebo>

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>40</updateRate>
        <legacyMode>false</legacyMode>
        <leftJoint>LRJ</leftJoint>
        <rightJoint>FRJ</rightJoint>
        <wheelSeparation>0.356</wheelSeparation>
        <wheelDiameter>0.075</wheelDiameter>
        <torque>15</torque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_link</robotBaseFrame>
        <publishWheelTF>false</publishWheelTF>
        <publishWheelJointState>false</publishWheelJointState>
        <rosDebugLevel>na</rosDebugLevel>
        <wheelAcceleration>0</wheelAcceleration>
        <wheelTorque>15</wheelTorque>
        <odometrySource>world</odometrySource>
        <publishOdomTF>true</publishOdomTF>
        <publishTf>1</publishTf>
    </plugin>
  </gazebo>

  <!--
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_back_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_back_left_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo>
    <plugin name="vehicle_auto_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.287</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="realsense_R200">
      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera>
          <horizontal_fov>1.3439</horizontal_fov>
          <image>
              <width>1920</width>
              <height>1080</height>
              <format>R8G8B8</format>
          </image>
          <depth_camera></depth_camera>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
    -->

</robot>


<!-- *************** END OF FILE *************** -->
